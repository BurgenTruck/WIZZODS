local Converted = {
		["_ScreenGui"] = Instance.new("ScreenGui");
		["__welcomebackground"] = Instance.new("Frame");
		["_UICorner"] = Instance.new("UICorner");
		["_UIGradient"] = Instance.new("UIGradient");
		["_welcomeuser"] = Instance.new("TextButton");
		["_UICorner1"] = Instance.new("UICorner");
		["_UIPadding"] = Instance.new("UIPadding");
		["__wizzohub"] = Instance.new("TextLabel");
		["__vernum"] = Instance.new("TextLabel");
		["_UIDragDetector"] = Instance.new("UIDragDetector");
		["_MainSkript"] = Instance.new("Frame");
		["_UICorner2"] = Instance.new("UICorner");
		["_UIGradient1"] = Instance.new("UIGradient");
		["_UIDragDetector1"] = Instance.new("UIDragDetector");
		["__farming"] = Instance.new("TextButton");
		["_UICorner3"] = Instance.new("UICorner");
		["_UIPadding1"] = Instance.new("UIPadding");
		["__farmingpage"] = Instance.new("Frame");
		["_UICorner4"] = Instance.new("UICorner");
		["_UIGradient2"] = Instance.new("UIGradient");
		["__amberesp"] = Instance.new("TextButton");
		["_UICorner5"] = Instance.new("UICorner");
		["_UIPadding2"] = Instance.new("UIPadding");
		["__regionspoofer"] = Instance.new("TextButton");
		["_UICorner6"] = Instance.new("UICorner");
		["_UIPadding3"] = Instance.new("UIPadding");
		["__amberfarm"] = Instance.new("TextButton");
		["_UICorner7"] = Instance.new("UICorner");
		["_UIPadding4"] = Instance.new("UIPadding");
		["__amberspeedtext"] = Instance.new("TextBox");
		["_UICorner8"] = Instance.new("UICorner");
		["_UIPadding5"] = Instance.new("UIPadding");
		["__prioritizemeteor"] = Instance.new("TextButton");
		["_UIPadding6e"] = Instance.new("UIPadding");
		["__extra"] = Instance.new("TextButton");
		["_UICorner8"] = Instance.new("UICorner");
		["_UIPadding5"] = Instance.new("UIPadding");
		["__extrapage"] = Instance.new("Frame");
		["_UICorner9"] = Instance.new("UICorner");
		["_UIGradient3"] = Instance.new("UIGradient");
		["__main"] = Instance.new("TextButton");
		["_UICorner10"] = Instance.new("UICorner");
		["_UIPadding6"] = Instance.new("UIPadding");
		["__mainpage"] = Instance.new("Frame");
		["_UICorner11"] = Instance.new("UICorner");
		["_UIGradient4"] = Instance.new("UIGradient");
		["__inffood"] = Instance.new("TextButton");
		["_UICorner12"] = Instance.new("UICorner");
		["_UIPadding7"] = Instance.new("UIPadding");
		["__infwater"] = Instance.new("TextButton");
		["_UICorner13"] = Instance.new("UICorner");
		["_UIPadding8"] = Instance.new("UIPadding");
		["__aquaticmode"] = Instance.new("TextButton");
		["_UICorner14"] = Instance.new("UICorner");
		["_UIPadding9"] = Instance.new("UIPadding");
		["__admindetector"] = Instance.new("TextButton");
		["_UICorner15"] = Instance.new("UICorner");
		["_UIPadding10"] = Instance.new("UIPadding");
		["_DinoSelector"] = Instance.new("Frame");
		["_ScrollingFrame"] = Instance.new("ScrollingFrame");
		["_Dinobutton"] = Instance.new("TextButton");
		["_SearchBox"] = Instance.new("TextBox");
		["_StartButton"] = Instance.new("TextButton");
		["_SelectedList"] = Instance.new("TextLabel");
		["__autoelder"] = Instance.new("TextButton");
		["_UIPadding13"] = Instance.new("UIPadding");
		["_UICorner16"] = Instance.new("UICorner");
		["_UIGradient5"] = Instance.new("UIGradient");
		["_UICorner17"] = Instance.new("UICorner");
		["__drexfarm"] = Instance.new("TextButton");
		["_UICorner81"] = Instance.new("UICorner");
		["_UIPadding71"] = Instance.new("UIPadding");
	}

	workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()

	wait(5)

	workspace:WaitForChild("GameEvents"):WaitForChild("ClaimDailyLogin"):FireServer()

	local plr = game:GetService("Players").LocalPlayer

	local Workspace = game:GetService("Workspace")

	local UIS = game:GetService'UserInputService';


	local InfEat = false
	local infDrink = false
	local amberenable = false
	local isDrinking = false
	local inffarm = false
	local isFarming = false
	local paused = false
	local action1 = false
	local canbegin = false
	local enabled = false
	local action3 = false
	local isenabled = false
	local notbroken = true

	local char = plr.Character or plr.CharacterAdded:Wait()
	local hrp = char:FindFirstChild("HumanoidRootPart")

	local terminals = {}

	local goingtowardsterminals = false
	local hasincubated = false
	local terminalindex = 1

	local rexdna = nil --"Tyrannosaurus Rex"
	local dna1 = nil
	local dna2 = nil
	local dna3 = nil
	local dna4 = nil
	local dna5 = nil
	local alloweddinos = {"Stegosaurus","Troodon","Velociraptor","Dilophosaurus","Tylosaurus"}
	local menustarted = false



	local function FindTerminals ()
		for _, TerminalsFound in ipairs(workspace.Interactables:GetChildren()) do
			table.insert(terminals,TerminalsFound:FindFirstChild("Lights") )
		end
	end

	for i, v in ipairs(terminals) do
		print(terminals)
	end

	local function notifys()
		-- Put this in a LocalScript under StarterGui, StarterPlayerScripts, or PlayerGui
		task.spawn(function()
			pcall(function()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Hello!",
					Text = "Anti AFK Start!",
					Duration = 5, -- seconds
					Button1 = "OK" -- optional button
				})
			end)
		end)

	end



	local function antiafk()
		local VirtualUser = game:GetService('VirtualUser')
		notifys()

		game:GetService('Players').LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end

	workspace.GameMap.Gameland.Props.Bushes.Parent = workspace

	local function contains(tbl, value)
		for _, v in ipairs(tbl) do
			if v == value then
				return true
			end
		end
		return false
	end

	local function parseRegionBonus(str)
		local regions = {}
		for region in string.gmatch(str, '%b""') do
			table.insert(regions, region:sub(2, -2))
		end
		return regions
	end

	local TweenService = game:GetService("TweenService")
	local locations = {}


	local function checkForClosestBush()
		plr = game:GetService("Players").LocalPlayer
		char = plr.Character or plr.CharacterAdded:Wait()
		hrp = char:FindFirstChild("HumanoidRootPart")

		if not hrp then
			return
		end

		local currentdino = game:GetService("Players").LocalPlayer.MemoryCard.CurrentDino.Value
		local dinopath = game:GetService("ReplicatedStorage").Database.Dinosaurs:FindFirstChild(currentdino)
		if dinopath.PlantEater.Value == false then
			return
		end

		local closestBush = nil
		local closestDistance = math.huge -- Start with the largest possible number

		local radius = 400

		for _, obj in ipairs(workspace.Bushes:GetDescendants()) do
			if obj.Name == "Leaf" then
				local distance = (obj.Position - hrp.Position).Magnitude
				if distance < radius + 2 then
					local playerDistance = (obj.Position - hrp.Position).Magnitude
					if playerDistance < closestDistance then
						closestBush = obj
						closestDistance = playerDistance
					end
				end
			end
		end

		local hungerbar = game:GetService("Players").LocalPlayer.PlayerGui.Main.Background.StatFrame.HungerBarFrame.HungerLbl.Text


		if closestBush then
			workspace.GameEvents.EatPlant:FireServer(closestBush)
		end
	end


	local function waterDrink()
		local char = game.Players.LocalPlayer.Character
		if not char then return end

		local head = char:FindFirstChild("Head")
		if not head then return end

		local closestWater
		local shortestDistance = math.huge
		local position = head.Position

		for _, w in pairs(workspace.GameMap.Water:GetDescendants()) do
			if w.Name == "Water" and w:IsA("BasePart") then
				local dist = (w.Position - position).Magnitude
				if dist < shortestDistance then
					shortestDistance = dist
					closestWater = w
				end
			end
		end

		if closestWater then
			local args = {
				closestWater,
				position
			}
			workspace.GameEvents.addThirst:FireServer(unpack(args))
		end
	end

	local foodlist = {}




	local function storefish()
		table.clear(foodlist)
		for _, fish in ipairs(workspace.FishStorage:GetDescendants()) do
			if (fish.Name == "Base" or fish.Name == "Part") and fish:IsA("BasePart") then
				table.insert(foodlist, fish)
			end
		end
		for _, lizard in ipairs(workspace.MiscellaneousStorage.LizardStorage:GetDescendants()) do
			if (lizard.Name == "Base" or lizard.Name == "Part") and lizard:IsA("BasePart") then
				table.insert(foodlist, lizard)
			end
		end
	end


	local function hidefish()
		char = plr.Character or plr.CharacterAdded:Wait()
		local playerframe = char:FindFirstChild("HumanoidRootPart")
		if not playerframe then return end

		local playerframe = char:FindFirstChild("HumanoidRootPart")
		if not playerframe then return end

		local currentdino = game:GetService("Players").LocalPlayer.MemoryCard.CurrentDino.Value
		local dinopath = game:GetService("ReplicatedStorage").Database.Dinosaurs:FindFirstChild(currentdino)
		if dinopath.PlantEater.Value == true then
			return
		end


		for _, food in ipairs(foodlist) do
			food.CFrame = playerframe.CFrame * CFrame.new(0,-30,0)
			food.Anchored = true
			food.Transparency = 1

		end
	end

	-- put in eat logic

	local function eat()
		local playerframe = char:FindFirstChild("HumanoidRootPart")
		if not playerframe then return end

		local currentdino = game:GetService("Players").LocalPlayer.MemoryCard.CurrentDino.Value
		local dinopath = game:GetService("ReplicatedStorage").Database.Dinosaurs:FindFirstChild(currentdino)
		if dinopath.PlantEater.Value == true then
			return
		end

		for _, food in ipairs(foodlist) do
			local args = {
				food.Parent,
				playerframe.Position
			}
			workspace:WaitForChild("GameEvents"):WaitForChild("eatMeat"):FireServer(unpack(args))
			return
		end
	end



	local function moveRegionToWorkspace()
		local player = game:GetService("Players").LocalPlayer
		char = player.Character
		if not char then return end

		local region = player:FindFirstChild("UpdateCurrentRegion") 
			or workspace.GameEvents:FindFirstChild("UpdateCurrentRegion")

		if not region then
			warn("UpdateCurrentRegion not found in Player or GameEvents!")
			return
		end

		if region.Parent ~= workspace.GameEvents then
			region.Parent = workspace.GameEvents
			--print("Moved UpdateCurrentRegion to GameEvents")
		end
	end

	local alreadymenu = false



	local function moveRegionToPlayer()
		local player = game:GetService("Players").LocalPlayer
		char = player.Character
		if not char then return end

		local region = workspace.GameEvents:FindFirstChild("UpdateCurrentRegion") 
			or player:FindFirstChild("UpdateCurrentRegion")

		if not region then
			warn("UpdateCurrentRegion not found in GameEvents or Player!")
			return
		end

		if region.Parent ~= player then
			region.Parent = player
			--print("Moved UpdateCurrentRegion to LocalPlayer")
		end
	end

	local function LoopBetween()
		wait(1.5)
		moveRegionToPlayer()
		wait(1)
		moveRegionToWorkspace()
	end
	local CurrentRegion = game:GetService("Players").LocalPlayer.PlayerGui.Main.MainScript.System.SystemSettings.CurrentRegion


	local function WildernessWark()
		if not game:GetService("Players").LocalPlayer.Character then
			return
		end
		CurrentRegion = game:GetService("Players").LocalPlayer.PlayerGui.Main.MainScript.System.SystemSettings.CurrentRegion
		--print(CurrentRegion.Value)
		if CurrentRegion.Value == "Wilderness" then
			canbegin = true
			if CurrentRegion.Value ~= "Jungle" then
				CurrentRegion.Value = "Jungle"
			else
				CurrentRegion.Value = "Aviary"
			end
		else
			canbegin = true
			--warn("You aren't in the Wilderness, enabling spoofer")
		end
	end

	local function refreshplayer()
		print("Refreshing")
		workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
		wait(10)
		workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
	end


	local function menuReset()

		if action1 == false then
			action1 = true
			paused = true
			action3 = true

			-- 🧵 Repeatedly try to move region until GoToMenu finishes
			local regionMover = coroutine.create(function()
				while action3 do
					moveRegionToPlayer()
					wait(0.1)
				end
			end)
			coroutine.resume(regionMover)

			workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
			wait(9)

			action3 = false  -- Stops the regionMover loop
			workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
			wait(0.2)

			moveRegionToWorkspace()
			--print("Moved region to ws")

			wait(3)
			paused = false
			action1 = false
		end
	end


	local function incubate(main,one,two,three,four,five)
		local args = {
			{
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(main),
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(one),
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(two),
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(three),
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(four),
				game:GetService("Players").LocalPlayer:WaitForChild("MemoryCard"):WaitForChild("MovieEvent2025"):WaitForChild("DNAStorage"):FindFirstChild(five)
			}
		}
		workspace:WaitForChild("GameEvents"):WaitForChild("MovieEvent2025"):WaitForChild("StartIncubation"):FireServer(unpack(args))
	end


	local function discardtrashdna() --automatically extracts ambers and discards all my DNA
		if not game:GetService("Players").LocalPlayer.Character then
			return
		end
		local player = game.Players.LocalPlayer
		local character = player.Character
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local amberamount = game:GetService("Players").LocalPlayer.MemoryCard.MovieEvent2025.Amber

		local args = {
			{
				true,
				true,
				false,
				false,
				true
			}
		}
		workspace:WaitForChild("GameFunctions"):WaitForChild("MovieEvent2025"):WaitForChild("DiscardAllDNAComponents"):InvokeServer(unpack(args))

		if amberamount.Value >= 1 then
			workspace:WaitForChild("GameEvents"):WaitForChild("MovieEvent2025"):WaitForChild("ExtractAmber"):FireServer()
		end
	end

	local function clearjunkextras()

		if game.Players.LocalPlayer.Character == nil then
			return
		end

		local player = game.Players.LocalPlayer
		local character = player.Character
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local memoryCard = player:FindFirstChild("MemoryCard")
		if not memoryCard then return end

		local movieEvent = memoryCard:FindFirstChild("MovieEvent2025")
		if not movieEvent then return end

		local DNAstorage = movieEvent:FindFirstChild("DNAStorage")
		if not DNAstorage then return end

		local allowedLookup = {}
		for _, name in ipairs(alloweddinos) do
			allowedLookup[name] = true
		end

		local dinoCounts = {}
		for _, dino in ipairs(DNAstorage:GetChildren()) do
			local name = dino.Name
			if allowedLookup[name] then
				dinoCounts[name] = (dinoCounts[name] or 0) + 1
			end
		end

		for _, dino in ipairs(DNAstorage:GetChildren()) do
			local name = dino.Name
			if allowedLookup[name] and dinoCounts[name] > 7 then
				local args = {name}
				local discardFunc = workspace:FindFirstChild("GameFunctions")
				if discardFunc then
					discardFunc = discardFunc:FindFirstChild("MovieEvent2025")
					if discardFunc then
						local discardDNA = discardFunc:FindFirstChild("DiscardDNAComponent")
						if discardDNA then
							discardDNA:InvokeServer(unpack(args))
							dinoCounts[name] -= 1
						end
					end
				end
			end
		end
	end

	local function removetagsonincubated() --should be done once beginincubate() is finished, this will reset tags so they can be selected again
		for _, ambereddinos in ipairs(game:GetService("Players").LocalPlayer.MemoryCard.MovieEvent2025.DNAStorage:GetChildren()) do
			if ambereddinos:FindFirstChild("Selected") then
				ambereddinos:FindFirstChild("Selected"):Destroy()
			end
		end
		dna1, dna2, dna3, dna4, dna5 = nil, nil, nil, nil, nil
	end

	--discarding functions end

	local function beginincubate() --should only happen if: player has enough DNA 

		if game.Players.LocalPlayer.Character == nil then
			return
		end

		if game:GetService("Players").LocalPlayer.MemoryCard.DNA == nil then
			return
		end

		local playerDNA = game:GetService("Players").LocalPlayer.MemoryCard.DNA
		local dnastorage = game:GetService("Players").LocalPlayer.MemoryCard.MovieEvent2025.DNAStorage

		if playerDNA.Value < 62500 then
			return
		end

		if not game:GetService("Players").LocalPlayer.MemoryCard.MovieEvent2025.DNAStorage:FindFirstChild("Tyrannosaurus Rex") then
			rexdna = nil
			return
		end

		rexdna = "Tyrannosaurus Rex"
		terminalindex = 1

		if hasincubated == true then return end --make false once player claims hatched egg

		task.spawn(function()
			wait(2520)
			hasincubated = false
		end)

		for _, ambereddinos in ipairs(dnastorage:GetChildren()) do
			-- if the dinos name is equal to the allowed dinos list,
			-- and if dna(x) is nothing and the dino has no selected tag, then
			-- set dna1 to the dino's name and make a selected tag in the dino
			if table.find(alloweddinos, ambereddinos.Name) then

				if dna1 == nil and not ambereddinos:FindFirstChild("Selected") then
					dna1 = ambereddinos.Name
					local tag = Instance.new("Script")
					tag.Name = "Selected"
					tag.Parent = ambereddinos
				end

				if dna2 == nil and not ambereddinos:FindFirstChild("Selected") then
					dna2 = ambereddinos.Name
					local tag = Instance.new("Script")
					tag.Name = "Selected"
					tag.Parent = ambereddinos
				end
				if dna3 == nil and not ambereddinos:FindFirstChild("Selected") then
					dna3 = ambereddinos.Name
					local tag = Instance.new("Script")
					tag.Name = "Selected"
					tag.Parent = ambereddinos
				end
				if dna4 == nil and not ambereddinos:FindFirstChild("Selected") then
					dna4 = ambereddinos.Name
					local tag = Instance.new("Script")
					tag.Name = "Selected"
					tag.Parent = ambereddinos
				end
				if dna5 == nil and not ambereddinos:FindFirstChild("Selected") then
					dna5 = ambereddinos.Name
					local tag = Instance.new("Script")
					tag.Name = "Selected"
					tag.Parent = ambereddinos
				end
			end
		end

		wait(1)
		incubate(rexdna,dna1,dna2,dna3,dna4,dna5)
		--goingtowardsterminals = true
		removetagsonincubated()
		hasincubated = true
	end

	local function moveRegion()
		local player = game:GetService("Players").LocalPlayer
		local character = player.Character
		if not character then return end
		local plr = character:FindFirstChild("HumanoidRootPart")
		if not plr then return end

		local currentRegionBonusValue = workspace.ServerValues.ServerBonus.CurrentRegionBonus.Value
		local currentRegionBonus

		if type(currentRegionBonusValue) == "string" then
			currentRegionBonus = parseRegionBonus(currentRegionBonusValue)
		else
			warn("Invalid currentRegionBonusValue")
			return
		end

		---------------------------------------------BELOW WORKS FINE, DONT TOUCH----------------------------------------------------------
		for _, regionpath in pairs(game:GetService("ReplicatedStorage").Regions:GetDescendants()) do
			if contains(currentRegionBonus, regionpath.Name) then
				for _, trueregion in pairs(regionpath:GetDescendants()) do
					if trueregion.Name == "Region" then
						trueregion.CFrame = plr.CFrame
					end
				end
			else
				for _, nonregion in pairs(regionpath:GetDescendants()) do
					if nonregion.Name == "Region" then
						nonregion.CFrame = CFrame.new(0,0,0)
					end
				end
			end
		end
	end
	---------------------------------------------ABOVE WORKS FINE, DONT TOUCH----------------------------------------------------------


	local function turnAquatic()
		isenabled = not isenabled
		for _, z in pairs(workspace.CharStorage:GetDescendants()) do
			if z.Name == "canBreatheInWater" then
				z.Value = isenabled
			end

			if z.Name == "canSwim" then
				z.Value = isenabled
			end
		end

		for _, z in pairs(game:GetService("ReplicatedStorage").Database.Dinosaurs:GetDescendants()) do
			if z.Name == "canBreatheInWater" then
				z.Value = isenabled
			end

			if z.Name == "canSwim" then
				z.Value = isenabled
			end
		end
		
		local oldNamecall

		oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
			local method = getnamecallmethod()

			-- Ensure we only modify client calls
			if not checkcaller() and method == "FireServer" and self.Name == "UpdateCStats" then
				local arguments = {...}

				arguments[1] = 1260
				arguments[2] = false
				arguments[3] = false
				arguments[4] = false
				arguments[5] = false
				arguments[6] = false

				return oldNamecall(self, unpack(arguments))
			end
			return oldNamecall(self, ...)
		end)
		--print("Aquatic Toggle",isenabled)
	end

	local function disableAmberESP()
		local spawnedAmbers = workspace.MiscellaneousStorage:GetDescendants()

		for _, amber in pairs(spawnedAmbers) do
			local gui = amber:FindFirstChild("Highlight")
			if gui then
				gui:Destroy()
			end
		end
	end


	local function displayAmberDistances()
		local spawnedAmbers = workspace.MiscellaneousStorage:GetDescendants()

		for _, amber in pairs(spawnedAmbers) do
			if amber:FindFirstChild("Highlight") then
				-- Prevent duplicate guis
				if not amber:FindFirstChild("DistanceGui") then
					-- Create BillboardGui
					local gui = Instance.new("BillboardGui")
					gui.Name = "DistanceGui"
					gui.Size = UDim2.new(0, 50, 0, 25)
					gui.StudsOffset = Vector3.new(0, -8, 0)
					gui.AlwaysOnTop = true
					gui.Adornee = amber
					gui.Parent = amber

					-- Add a text label
					local text = Instance.new("TextLabel")
					text.Name = "Texter"
					text.Size = UDim2.new(1, 0, 1, 0)
					text.BackgroundTransparency = 1
					text.TextColor3 = Color3.new(1, 1, 1)
					text.TextScaled = true
					text.Font = Enum.Font.SourceSansBold
					text.Parent = gui
				end
			end
		end
	end

	local function makeTextDistance()
		local spawnedAmbers = workspace.MiscellaneousStorage:GetDescendants() 
		local plr = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')

		for _, amber in pairs(spawnedAmbers) do
			if amber:FindFirstChild("DistanceGui") then
				local part = amber:FindFirstChildWhichIsA("Part")
				local distance = (part.Position - plr.Position).Magnitude
				amber.DistanceGui.Texter.Text = string.format("%.1f Studs away", distance)
			end
		end
	end


	local function disableAmberDistanceDisplay()
		local spawnedAmbers = workspace.MiscellaneousStorage:GetDescendants()

		for _, amber in pairs(spawnedAmbers) do
			local gui = amber:FindFirstChild("DistanceGui")
			if gui then
				gui:Destroy()
			end
		end
	end

	--==================================--
	--Start Amber farm type shit--
	--==================================--
	local Noclip = true
	local prioritizemeteors = false
	local goingtowardsamber = true
	local destinations = {}

	--general scripts
	local function noclip()
		local function Nocl()
			if  game.Players.LocalPlayer.Character ~= nil then
				for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if v:IsA('BasePart') and v.CanCollide  then
						v.CanCollide = false
					end
				end
			end
			wait(0.21) -- basic optimization
		end
		Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
	end

	local function spawnPlatform()
		if game.Players.LocalPlayer.Character == nil then
			return
		end

		local player = game.Players.LocalPlayer
		local character = player.Character
		local hrp = character:FindFirstChild("HumanoidRootPart")

		local platform = Instance.new("Part")
		platform.Size = Vector3.new(30, 1, 30)
		platform.Anchored = true
		platform.Position = hrp.Position - Vector3.new(0, 3, 0)
		platform.Transparency = 1
		platform.BrickColor = BrickColor.new("Bright red")
		platform.Name = "PlayerPlatform"
		platform.Material = Enum.Material.SmoothPlastic
		platform.Parent = workspace
	end

	local function forcecameraup(amber)
		if not workspace.CurrentCamera then
			return
		end

		local camera = workspace.CurrentCamera
		camera.CameraType = Enum.CameraType.Scriptable

		local cameraPos = Vector3.new(amber.X, amber.Y + 25, amber.Z)
		camera.CFrame = CFrame.new(cameraPos, Vector3.new(amber.X, amber.Y, amber.Z))

	end

	local function initialize() 
		if game.Players.LocalPlayer.Character == nil then
			return
		end

		local plr = game:GetService("Players").LocalPlayer
		local character = plr.Character

		noclip()
		spawnPlatform()

		for _, part in ipairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end

		workspace.Gravity = 0

		if workspace.GameEvents:FindFirstChild("UpdateCStats") ~= nil then
			workspace.GameEvents.UpdateCStats:Destroy()
		end

		if not workspace:FindFirstChild("Bushes") then
			workspace.GameMap.Gameland.Props.Bushes.Parent = workspace
		end

		--task.spawn(function()
		--while true do
		--print("Auto-Save enabled")
		--wait(300)
		--end
		--end)
	end

	-- tweening logic


	local function correctY(pos) 
		if not game.Players.LocalPlayer.Character then
			return
		end
		if not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
			return
		end


		local player = game.Players.LocalPlayer
		local hrp = player.Character:FindFirstChild("HumanoidRootPart")

		local currentY = hrp.Position.Y
		local targetY = pos.Y
		local vel = hrp.Velocity

		if math.abs(currentY - targetY) < 1 then
			hrp.Velocity = Vector3.new(vel.X, 0, vel.Z)
		elseif currentY < targetY then
			hrp.Velocity = Vector3.new(vel.X, 15, vel.Z)
		else
			hrp.Velocity = Vector3.new(vel.X, -15, vel.Z)
		end
	end

	local function tweenpos(pos)
		if not game.Players.LocalPlayer.Character then
			return
		end
		local speed = Converted["__amberspeedtext"].Text
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid then return end

		humanoid:MoveTo(pos)
		humanoid.WalkSpeed = tonumber(speed) or 50
	end

	local function tweentowards(pos) 
		workspace.Gravity = 0
		correctY(pos)
		tweenpos(pos)
	end

	-- amber logic

	local function sortByDistance()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:FindFirstChild("HumanoidRootPart")

		if not hrp then return end

		table.sort(destinations, function(a, b)
			local isMeteorA = a.Name == "Meteor"
			local isMeteorB = b.Name == "Meteor"

			if prioritizemeteors == true then
				if isMeteorA ~= isMeteorB then
					return isMeteorA
				end
			end
			-- If both are the same type, sort by distance
			local aBase = a:FindFirstChild("Base") or a:FindFirstChild("MeteorBase")
			local bBase = b:FindFirstChild("Base") or b:FindFirstChild("MeteorBase")

			if aBase and bBase then
				local distA = (hrp.Position - aBase.Position).Magnitude
				local distB = (hrp.Position - bBase.Position).Magnitude
				return distA < distB
			end

			return aBase ~= nil
		end)
	end

	local function findclosestitems()
		table.clear(destinations)
		local spawnedAmbers = workspace.MiscellaneousStorage:GetChildren()


		-- new amber logic
		for _, amber in pairs(spawnedAmbers) do
			if amber.Name == "AmberRock" and amber:FindFirstChild("Base") then

				local touchingParts = amber:FindFirstChild("Base"):GetTouchingParts() --gets a table of touching parts
				for _, v in pairs(touchingParts) do -- loops through all the touching parts
					if v.Name == "Terrain" then
						for _, descendant in pairs(amber:GetDescendants()) do
							if descendant:IsA("ProximityPrompt") then
								table.insert(destinations,amber) --only add to table if amber is touching terrain, and has proximityprompt
							end
						end

					end
				end

			end
		end

		for _, meteor in pairs(spawnedAmbers) do
			if meteor.Name == "Meteor" and meteor:FindFirstChild("MeteorBase") then
				for _, descendant in pairs(meteor:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						table.insert(destinations,meteor)
					end
				end
			end
		end
		sortByDistance()
	end

	local function menureseert()
		if alreadymenu == false then
			alreadymenu = true
			notbroken = false
			workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
			task.wait(10)
			workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
			wait(2)
			notbroken = true
			findclosestitems()
			wait(5)
			alreadymenu = false
		end		
	end

	local function compareplayerpos(amber)
		if not game.Players.LocalPlayer.Character then
			menureseert()
			return
		end

		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:FindFirstChild("HumanoidRootPart")

		if not hrp then
			return false
		end

		local playerPos = hrp.Position
		local amberPos = amber -- assuming amber is already a Vector3

		if (playerPos - amberPos).Magnitude < 5 then
			return true -- yes, player is very close to amber
		else
			return false
		end
	end

	local function checkForClosestProximity(promptobject)

		if not game.Players.LocalPlayer.Character then
			menureseert()
			return
		end
		local closestPrompt = nil

		for _, prompts in ipairs(promptobject:GetDescendants()) do
			if prompts:IsA("ProximityPrompt") then
				closestPrompt = prompts
			end
		end

		if closestPrompt then
			closestPrompt:InputHoldBegin()
			task.wait(0.5)
			if closestPrompt then
				closestPrompt:InputHoldEnd()
			end
		end
	end
	--==================================--
	--End Amber farm type shit--
	--==================================--


	local function gototerminals()
		if game.Players.LocalPlayer.Character == nil then
			menureseert()
			return
		end
		if goingtowardsterminals ==  false then
			return
		end

		if terminalindex >= 4 then
			return
		end

		local player = game.Players.LocalPlayer
		local character = player.Character
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local distancetoterminal = (terminals[terminalindex].Position - character.HumanoidRootPart.Position).Magnitude

		if distancetoterminal <= 5  then
			terminalindex += 1
		end

		if terminalindex == 4 then
			goingtowardsterminals = false
			return
		end
		tweentowards(terminals[terminalindex].Position)
		forcecameraup(terminals[terminalindex].Position)
	end

	-- Checks if player is close to the amber and advances if so



	spawn(function()
		while true do
			if not paused and enabled then

				LoopBetween()
			else
				wait(0.1)
			end
		end
	end)


	local function checkClosestTerminal() --# Add to 1.3
		if game.Players.LocalPlayer.Character == nil then
			menureseert()
			return
		end

		plr = game:GetService("Players").LocalPlayer
		char = plr.Character
		hrp = char:FindFirstChild("HumanoidRootPart") --rremovve locals for all above ^^ NOT below 

		if not hrp then return end

		local closestPrompt = nil
		local closestDistance = math.huge -- Start with the largest possible number

		local radius = 40

		for _, prompts in ipairs(workspace.Interactables:GetDescendants()) do
			if prompts:IsA("ProximityPrompt") then
				local distance = (prompts.Parent.Parent.Parent:FindFirstChild("Lights").CFrame.Position - hrp.Position).Magnitude
				if distance < radius + 2 then
					local playerDistance = (prompts.Parent.Parent.Parent:FindFirstChild("Lights").CFrame.Position - hrp.Position).Magnitude
					if playerDistance < closestDistance then
						closestPrompt = prompts
						closestDistance = playerDistance
					end
				end
			end
		end

		if closestPrompt then
			-- Get the exact hold duration from the ProximityPrompt
			local holdDuration = closestPrompt.HoldDuration
			-- Trigger the start of the input hold
			closestPrompt:InputHoldBegin()
			-- Now hold the input for the exact duration of the proximity prompt's hold duration
			task.wait(holdDuration)
			-- After the delay, trigger the end of the hold
			closestPrompt:InputHoldEnd()
		end
	end


	local function createBillboard(amber,symbol)
		local gui = Instance.new("BillboardGui")
		gui.Adornee = amber
		gui.Size = UDim2.new(0, 100, 0, 40)
		gui.AlwaysOnTop = true
		gui.StudsOffset = Vector3.new(0, 0, 0)
		gui.Name = "Highlight"

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(0.25, 0, 0.25, 0)
		textLabel.AnchorPoint = Vector2.new(0.25, 0.25)
		textLabel.Position = UDim2.new(0.25, 0, 0.25, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.Text = symbol 	
		textLabel.TextColor3 = Color3.fromRGB(255, 170, 0)
		textLabel.TextScaled = true
		textLabel.Parent = gui

		gui.Parent = amber
	end

	local function highlightAmbers()
		local workspc = workspace.MiscellaneousStorage:GetChildren()

		--🔶
		for _, amber in pairs(workspc) do
			if amber.Name == "AmberRock" then 
				for _, descendant in pairs(amber:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						if not amber:FindFirstChild("Highlight") then
							createBillboard(amber,tostring("🔶"))
							break -- stop after finding one prompt in this amber
						end
					end
				end
			end
		end
		--🔷
		for _, meteor in pairs(workspc) do
			if meteor.Name == "Meteor" then 
				for _, descendant in pairs(meteor:GetDescendants()) do
					if descendant:IsA("ProximityPrompt") then
						if not meteor:FindFirstChild("Highlight") then
							createBillboard(meteor,tostring("🔷"))
							break -- stop after finding one prompt in this amber
						end
					end
				end
			end
		end
		--print("Highlighting complete")
	end



	local function enabletab(enable,disable1,disable2)
		enable.Visible = true
		disable1.Visible = false
		disable2.Visible = false
	end

	local VirtualUser = game:GetService('VirtualUser')

	game:GetService('Players').LocalPlayer.Idled:Connect(function()
		VirtualUser:CaptureController()
		VirtualUser:ClickButton2(Vector2.new())
	end)

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "AntiAFK loaded!",
		Button1 = "Thanks",
		Duration = 5
	})


	game:GetService("StarterGui"):SetCore("SendNotification",{
		Title = "Premium user whitelisted, welcome!",
		Button1 = "Enjoy",
		Duration = 10
	})
	-- END PROPERTIES

	Converted["_ScreenGui"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Converted["_ScreenGui"].Parent = game:GetService("CoreGui")

	Converted["__welcomebackground"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__welcomebackground"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__welcomebackground"].BorderSizePixel = 0
	Converted["__welcomebackground"].Position = UDim2.new(0.5, -137, 0.5, -49) -- center on screen
	Converted["__welcomebackground"].AnchorPoint = Vector2.new(0.5, 0.5)
	Converted["__welcomebackground"].Size = UDim2.new(0, 275, 0, 98)
	Converted["__welcomebackground"].ZIndex = 4
	Converted["__welcomebackground"].Name = "_welcomebackground"
	Converted["__welcomebackground"].Parent = Converted["_ScreenGui"]

	Converted["_UICorner"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner"].Parent = Converted["__welcomebackground"]

	Converted["_UIGradient"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(157.0000058412552, 217.0000022649765, 255)),
		ColorSequenceKeypoint.new(0.5605536699295044, Color3.fromRGB(134.7162687778473, 179.1972291469574, 221.9723242521286)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(101.00000157952309, 122.00000032782555, 172.00000494718552))
	}
	Converted["_UIGradient"].Rotation = 90
	Converted["_UIGradient"].Transparency = NumberSequence.new{
		NumberSequenceKeypoint.new(0, 0.10000000149011612),
		NumberSequenceKeypoint.new(1, 0.10000000149011612)
	}
	Converted["_UIGradient"].Parent = Converted["__welcomebackground"]

	Converted["_welcomeuser"].Font = Enum.Font.SourceSansBold
	Converted["_welcomeuser"].RichText = true
	Converted["_welcomeuser"].Text = "Welcome, " .. plr.Name
	Converted["_welcomeuser"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_welcomeuser"].TextScaled = true
	Converted["_welcomeuser"].TextSize = 36
	Converted["_welcomeuser"].TextWrapped = true
	Converted["_welcomeuser"].BackgroundColor3 = Color3.fromRGB(124.00000780820847, 160.00000566244125, 203.00001829862595)
	Converted["_welcomeuser"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_welcomeuser"].BorderSizePixel = 0
	Converted["_welcomeuser"].Position = UDim2.new(0.156363636, 0, 0.377551019, 0)
	Converted["_welcomeuser"].Size = UDim2.new(0, 189, 0, 47)
	Converted["_welcomeuser"].ZIndex = 2
	Converted["_welcomeuser"].Name = "welcomeuser"
	Converted["_welcomeuser"].Parent = Converted["__welcomebackground"]

	Converted["_welcomeuser"].MouseButton1Down:Connect(function()  --mainskript button
		local newpos = Converted["__welcomebackground"].Position
		Converted["_MainSkript"].Visible = true
		Converted["_MainSkript"].Parent = Converted["_ScreenGui"]
		Converted["_MainSkript"].Position = newpos
		Converted["__welcomebackground"].Visible = false
	end)

	Converted["_UICorner1"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner1"].Parent = Converted["_welcomeuser"]

	Converted["_UIPadding"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding"].Parent = Converted["_welcomeuser"]

	Converted["__wizzohub"].Font = Enum.Font.SourceSansSemibold
	Converted["__wizzohub"].RichText = true
	Converted["__wizzohub"].Text = "Wizzo Hub"
	Converted["__wizzohub"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__wizzohub"].TextSize = 31
	Converted["__wizzohub"].TextStrokeColor3 = Color3.fromRGB(255, 5.000000176951289, 5.000000176951289)
	Converted["__wizzohub"].TextWrapped = true
	Converted["__wizzohub"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__wizzohub"].BackgroundTransparency = 1
	Converted["__wizzohub"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__wizzohub"].BorderSizePixel = 5
	Converted["__wizzohub"].Size = UDim2.new(0, 141, 0, 37)
	Converted["__wizzohub"].Name = "_wizzohub"
	Converted["__wizzohub"].Parent = Converted["__welcomebackground"]

	Converted["__vernum"].Font = Enum.Font.SourceSansSemibold
	Converted["__vernum"].RichText = true
	Converted["__vernum"].Text = "V 1.56"
	Converted["__vernum"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__vernum"].TextScaled = true
	Converted["__vernum"].TextSize = 31
	Converted["__vernum"].TextStrokeColor3 = Color3.fromRGB(255, 5.000000176951289, 5.000000176951289)
	Converted["__vernum"].TextWrapped = true
	Converted["__vernum"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__vernum"].BackgroundTransparency = 1
	Converted["__vernum"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__vernum"].BorderSizePixel = 5
	Converted["__vernum"].Position = UDim2.new(0.75636363, 0, 0.795918345, 0)
	Converted["__vernum"].Size = UDim2.new(0, 76, 0, 20)
	Converted["__vernum"].Name = "_vernum"
	Converted["__vernum"].Parent = Converted["__welcomebackground"]

	Converted["_UIDragDetector"].Parent = Converted["__welcomebackground"]

	Converted["_MainSkript"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_MainSkript"].BackgroundTransparency = 0.30000001192092896
	Converted["_MainSkript"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_MainSkript"].BorderSizePixel = 3
	Converted["_MainSkript"].Position = UDim2.new(-1.33642006, 300, -0.871332288, 85)
	Converted["_MainSkript"].Size = UDim2.new(0, 409, 0, 570)
	Converted["_MainSkript"].Name = "MainSkript"
	Converted["_MainSkript"].Parent = Converted["__welcomebackground"]

	Converted["_UICorner2"].CornerRadius = UDim.new(0.100000001, 8)
	Converted["_UICorner2"].Parent = Converted["_MainSkript"]

	Converted["_UIGradient1"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(146.00000649690628, 205.00000298023224, 245.00000059604645)),
		ColorSequenceKeypoint.new(0.3927335739135742, Color3.fromRGB(146.00000649690628, 205.00000298023224, 245.00000059604645)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(65.0000037252903, 77.00000301003456, 130.0000074505806))
	}
	Converted["_UIGradient1"].Rotation = 90
	Converted["_UIGradient1"].Parent = Converted["_MainSkript"]

	Converted["_UIDragDetector1"].Parent = Converted["_MainSkript"]
	Converted["_MainSkript"].Visible = false


	Converted["__farming"].Font = Enum.Font.SourceSansBold
	Converted["__farming"].RichText = true
	Converted["__farming"].Text = "Farm"
	Converted["__farming"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__farming"].TextScaled = true
	Converted["__farming"].TextSize = 1
	Converted["__farming"].TextWrapped = true
	Converted["__farming"].BackgroundColor3 = Color3.fromRGB(124.00000780820847, 160.00000566244125, 203.00001829862595)
	Converted["__farming"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__farming"].BorderSizePixel = 0
	Converted["__farming"].Position = UDim2.new(0.366632581, 0, 0.0442177206, 0)
	Converted["__farming"].Size = UDim2.new(0, 109, 0, 28)
	Converted["__farming"].ZIndex = 2
	Converted["__farming"].Name = "_farming"
	Converted["__farming"].Parent = Converted["_MainSkript"]

	Converted["__farming"].MouseButton1Down:Connect(function()  --__farming button
		enabletab(Converted["__farmingpage"],Converted["__extrapage"],Converted["__mainpage"]) --enable,disable,disable
	end)


	Converted["_UICorner3"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner3"].Parent = Converted["__farming"]

	Converted["_UIPadding1"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding1"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding1"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding1"].Parent = Converted["__farming"]

	Converted["__farmingpage"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__farmingpage"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__farmingpage"].BorderSizePixel = 0
	Converted["__farmingpage"].Position = UDim2.new(-1.37976933, 0, 1.49178064, 0)
	Converted["__farmingpage"].Size = UDim2.new(0, 361, 0, 473)
	Converted["__farmingpage"].Name = "_farmingpage"
	Converted["__farmingpage"].Parent = Converted["__farming"]

	Converted["_UICorner4"].CornerRadius = UDim.new(0.0500000007, 8)
	Converted["_UICorner4"].Parent = Converted["__farmingpage"]

	Converted["_UIGradient2"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(80.00000283122063, 91.00000217556953, 134.00000721216202)),
		ColorSequenceKeypoint.new(0.7474048733711243, Color3.fromRGB(145.00000655651093, 157.0000058412552, 199.0000033378601)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(132.0000073313713, 179.000004529953, 206.0000029206276))
	}
	Converted["_UIGradient2"].Rotation = 270
	Converted["_UIGradient2"].Parent = Converted["__farmingpage"]

	Converted["__amberesp"].Font = Enum.Font.SourceSansBold
	Converted["__amberesp"].RichText = true
	Converted["__amberesp"].Text = "ESP (OFF)"
	Converted["__amberesp"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__amberesp"].TextScaled = true
	Converted["__amberesp"].TextSize = 1
	Converted["__amberesp"].TextWrapped = true
	Converted["__amberesp"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__amberesp"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__amberesp"].BorderSizePixel = 0
	Converted["__amberesp"].Position = UDim2.new(0.533326864, 0, 0.0590168685, 0)
	Converted["__amberesp"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__amberesp"].ZIndex = 2
	Converted["__amberesp"].Name = "_amberesp"
	Converted["__amberesp"].Parent = Converted["__farmingpage"]
	Converted["__amberesp"].MouseButton1Down:Connect(function()
		amberenable = not amberenable
		if amberenable == true then
			Converted["__amberesp"].Text = "ESP (ON)"
			spawn(function()
				while amberenable == true do
					highlightAmbers()
					wait(5)
				end
			end)

			spawn(function()
				while amberenable == true do
					displayAmberDistances()
					makeTextDistance()
					wait(.2)
				end
			end)

		else
			Converted["__amberesp"].Text = "ESP (OFF)"
			disableAmberDistanceDisplay()
			disableAmberESP()
		end
	end)


	local isamberfarm = false

	Converted["_UICorner5"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner5"].Parent = Converted["__amberesp"]

	Converted["_UIPadding2"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding2"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding2"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding2"].Parent = Converted["__amberesp"]

	Converted["__regionspoofer"].Font = Enum.Font.SourceSansBold
	Converted["__regionspoofer"].RichText = true
	Converted["__regionspoofer"].Text = "DNA Spoofer"
	Converted["__regionspoofer"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__regionspoofer"].TextScaled = true
	Converted["__regionspoofer"].TextSize = 1
	Converted["__regionspoofer"].TextWrapped = true
	Converted["__regionspoofer"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__regionspoofer"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__regionspoofer"].BorderSizePixel = 0
	Converted["__regionspoofer"].Position = UDim2.new(0.101910196, 0, 0.0590168685, 0)
	Converted["__regionspoofer"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__regionspoofer"].ZIndex = 2
	Converted["__regionspoofer"].Name = "_regionspoofer"
	Converted["__regionspoofer"].Parent = Converted["__farmingpage"]
	Converted["__regionspoofer"].MouseButton1Down:Connect(function()
		WildernessWark()
		--moveRegionToPlayer() 		moveRegionToWorkspace()
		if isamberfarm then
			return
		end

		local Players = game:GetService("Players")
		local player = Players.LocalPlayer

		-- Fires whenever the player's character spawns (initial spawn + respawn)

		if canbegin == true then
			inffarm = not inffarm
			--print("inffarm", inffarm)
			enabled = true
			if inffarm and not isFarming then
				isFarming = true
				spawn(function()
					while true do
						if inffarm then
							if game.Players.LocalPlayer.Character == nil then
								return
							end

							WildernessWark()
							moveRegion()
							wait(1)
						end
					end
					isFarming = false
				end)
			end
		end

		spawn(function()
			local lastValue = workspace.ServerValues.ServerBonus.CurrentRegionBonus.Value
			while true do
				task.wait(1)
				if game.Players.LocalPlayer.Character == nil then
					menureseert()
					return
				end
				local newValue = workspace.ServerValues.ServerBonus.CurrentRegionBonus.Value
				if newValue ~= lastValue then
					lastValue = newValue
					menuReset()
				end
			end
		end)

	end)

	Converted["_UICorner6"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner6"].Parent = Converted["__regionspoofer"]

	Converted["_UIPadding3"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding3"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding3"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding3"].Parent = Converted["__regionspoofer"]

	Converted["__prioritizemeteor"].Font = Enum.Font.SourceSansBold
	Converted["__prioritizemeteor"].RichText = true
	Converted["__prioritizemeteor"].Text = "Meteors First? (N)"
	Converted["__prioritizemeteor"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__prioritizemeteor"].TextScaled = true
	Converted["__prioritizemeteor"].TextSize = 1
	Converted["__prioritizemeteor"].TextWrapped = true
	Converted["__prioritizemeteor"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__prioritizemeteor"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__prioritizemeteor"].BorderSizePixel = 0
	Converted["__prioritizemeteor"].Position = UDim2.new(0.101910114, 0, 0.727468908, 0)
	Converted["__prioritizemeteor"].Size = UDim2.new(0, 92, 0, 35)
	Converted["__prioritizemeteor"].ZIndex = 2
	Converted["__prioritizemeteor"].Name = "_prioritizemeteor"
	Converted["__prioritizemeteor"].Parent = Converted["__farmingpage"]
	Converted["__prioritizemeteor"].MouseButton1Down:Connect(function()
		prioritizemeteors = not prioritizemeteors

		if prioritizemeteors == false then
			Converted["__prioritizemeteor"].Text = "Meteors First? (N)"
		end

		if prioritizemeteors == true then
			Converted["__prioritizemeteor"].Text = "Meteors First? (Y)"
		end

		--print(prioritizemeteors)
	end)

	local isalive = true
	local nearestamber = nil

	Converted["_UIPadding6e"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding6e"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding6e"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding6e"].Parent = Converted["__prioritizemeteor"]

	Converted["__amberfarm"].Font = Enum.Font.SourceSansBold
	Converted["__amberfarm"].RichText = true
	Converted["__amberfarm"].Text = "AFK Meteor/Amber"
	Converted["__amberfarm"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__amberfarm"].TextScaled = true
	Converted["__amberfarm"].TextSize = 1
	Converted["__amberfarm"].TextWrapped = true
	Converted["__amberfarm"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__amberfarm"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__amberfarm"].BorderSizePixel = 0
	Converted["__amberfarm"].Position = UDim2.new(0.101910196, 0, 0.220069289, 0)
	Converted["__amberfarm"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__amberfarm"].ZIndex = 2
	Converted["__amberfarm"].Name = "_amberfarm"
	Converted["__amberfarm"].Parent = Converted["__farmingpage"]

	Converted["__amberfarm"].MouseButton1Down:Connect(function()
		workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
		antiafk()
		isamberfarm = true

		local Players = game:GetService("Players")
		local player = Players.LocalPlayer

		-- Fires whenever the player's character spawns (initial spawn + respawn)
		player.CharacterAdded:Connect(function(character)
			-- If it's a respawn after death, this will run
			wait(1)
			isalive = true

			-- Get the humanoid in the new character
			local humanoid = character:WaitForChild("Humanoid")

			-- Detect when that humanoid dies
			humanoid.Died:Connect(function()
				isalive = false
			end)
		end)

		initialize() --is done once, regardless of respawn
		findclosestitems() --finds closest amber/meteors

		task.spawn(function()
			while true do
				wait(1)
				if game.Players.LocalPlayer.Character == nil then
					menureseert()
					return
				end
				local lp = game.Players.LocalPlayer.Character

				local hrp = lp:FindFirstChild("HumanoidRootPart")
				local vel = hrp.Velocity

				if hrp.Position.Y >= 560 then
					task.spawn(function()
						--do this for 5 seconds
						hrp.Velocity = Vector3.new(vel.X, -192, vel.Z)
					end)
				end
				if hrp.Position.Y <= 30 then
					task.spawn(function()
						--do this for 5 seconds
						hrp.Velocity = Vector3.new(vel.X, 384, vel.Z)
					end)
				end
			end
		end)

		task.spawn(function()
			while true do
				workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
				wait(5)
			end
		end)

		local function getclosestamber()

			if #destinations < 1 then
				findclosestitems()
				return
			end


			if (destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")) and goingtowardsamber == true then
				nearestamber = destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")

			elseif not (destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")) then
				findclosestitems()
				return
			end

			if not game.Players.LocalPlayer.Character then
				if nearestamber ~= nil then
					if nearestamber:IsA("BasePart") then
						nearestamber.Parent:Destroy()
					end
				end
				menureseert()
				return
			end

			if goingtowardsamber == true then
				tweentowards(nearestamber.Position)
				forcecameraup(nearestamber.Position)
				checkForClosestProximity(nearestamber)

				if compareplayerpos(nearestamber.Position) then
					goingtowardsamber = false
					spawnPlatform()
					workspace.Gravity = 196.2

					wait(0.8)
					--print("All Done!")
					findclosestitems()
					goingtowardsamber = true
				end

			end
		end
		--_ERES Tu2
		while true do
			if isalive == true and notbroken == true then
				getclosestamber()		
			end
			wait(0.1)
		end

	end)



	Converted["_UICorner7"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner7"].Parent = Converted["__amberfarm"]

	Converted["_UIPadding4"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding4"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding4"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding4"].Parent = Converted["__amberfarm"]

	Converted["__amberspeedtext"].CursorPosition = -1
	Converted["__amberspeedtext"].Font = Enum.Font.SourceSansBold
	Converted["__amberspeedtext"].PlaceholderColor3 = Color3.fromRGB(236.00001633167267, 236.00001633167267, 236.00001633167267)
	Converted["__amberspeedtext"].PlaceholderText = "Set Speed"
	Converted["__amberspeedtext"].RichText = true
	Converted["__amberspeedtext"].Text = ""
	Converted["__amberspeedtext"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__amberspeedtext"].TextScaled = true
	Converted["__amberspeedtext"].TextSize = 20
	Converted["__amberspeedtext"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__amberspeedtext"].TextWrapped = true
	Converted["__amberspeedtext"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00000083446503)
	Converted["__amberspeedtext"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__amberspeedtext"].BorderSizePixel = 0
	Converted["__amberspeedtext"].Position = UDim2.new(0.094, 0, 0.854, 0)
	Converted["__amberspeedtext"].Size = UDim2.new(0, 92, 0, 35)
	Converted["__amberspeedtext"].Name = "_amberspeedtext"
	Converted["__amberspeedtext"].Parent = Converted["__farmingpage"]

	Converted["_UICorner8"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner8"].Parent = Converted["__amberspeedtext"]

	Converted["_UIPadding5"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding5"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding5"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding5"].Parent = Converted["__amberspeedtext"]

	Converted["__extra"].Font = Enum.Font.SourceSansBold
	Converted["__extra"].RichText = true
	Converted["__extra"].Text = "Extra"
	Converted["__extra"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__extra"].TextScaled = true
	Converted["__extra"].TextSize = 1
	Converted["__extra"].TextWrapped = true
	Converted["__extra"].BackgroundColor3 = Color3.fromRGB(124.00000780820847, 160.00000566244125, 203.00001829862595)
	Converted["__extra"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__extra"].BorderSizePixel = 0
	Converted["__extra"].Position = UDim2.new(0.662476182, 0, 0.0442177206, 0)
	Converted["__extra"].Size = UDim2.new(0, 109, 0, 28)
	Converted["__extra"].ZIndex = 2
	Converted["__extra"].Name = "_extra"
	Converted["__extra"].Parent = Converted["_MainSkript"]

	Converted["__extra"].MouseButton1Down:Connect(function()  --mainskript button
		enabletab(Converted["__extrapage"],Converted["__farmingpage"],Converted["__mainpage"]) --enable,disable,disable
	end)


	Converted["_UICorner8"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner8"].Parent = Converted["__extra"]

	Converted["_UIPadding5"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding5"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding5"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding5"].Parent = Converted["__extra"]

	Converted["__extrapage"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__extrapage"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__extrapage"].BorderSizePixel = 0
	Converted["__extrapage"].Position = UDim2.new(-2.60765719, 0, 1.49178064, 0)
	Converted["__extrapage"].Size = UDim2.new(0, 361, 0, 473)
	Converted["__extrapage"].Name = "_extrapage"
	Converted["__extrapage"].Parent = Converted["__extra"]

	Converted["_UICorner9"].CornerRadius = UDim.new(0.0500000007, 8)
	Converted["_UICorner9"].Parent = Converted["__extrapage"]

	Converted["_UIGradient3"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(80.00000283122063, 91.00000217556953, 134.00000721216202)),
		ColorSequenceKeypoint.new(0.7474048733711243, Color3.fromRGB(145.00000655651093, 157.0000058412552, 199.0000033378601)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(132.0000073313713, 179.000004529953, 206.0000029206276))
	}
	Converted["_UIGradient3"].Rotation = 270
	Converted["_UIGradient3"].Parent = Converted["__extrapage"]



	Converted["__main"].Font = Enum.Font.SourceSansBold
	Converted["__main"].RichText = true
	Converted["__main"].Text = "Main"
	Converted["__main"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__main"].TextScaled = true
	Converted["__main"].TextSize = 1
	Converted["__main"].TextWrapped = true
	Converted["__main"].BackgroundColor3 = Color3.fromRGB(124.00000780820847, 160.00000566244125, 203.00001829862595)
	Converted["__main"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__main"].BorderSizePixel = 0
	Converted["__main"].Position = UDim2.new(0.065899089, 0, 0.0442177206, 0)
	Converted["__main"].Size = UDim2.new(0, 109, 0, 28)
	Converted["__main"].ZIndex = 2
	Converted["__main"].Name = "_main"
	Converted["__main"].Parent = Converted["_MainSkript"]
	Converted["__main"].MouseButton1Down:Connect(function()  --__main button
		enabletab(Converted["__mainpage"],Converted["__farmingpage"],Converted["__extrapage"]) --enable,disable,disable
	end)

	--start auto elder
	local visibledinoselector = false

	Converted["__autoelder"].Font = Enum.Font.SourceSansBold
	Converted["__autoelder"].RichText = true
	Converted["__autoelder"].Text = "Auto Elder"
	Converted["__autoelder"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__autoelder"].TextScaled = true
	Converted["__autoelder"].TextSize = 1
	Converted["__autoelder"].TextWrapped = true
	Converted["__autoelder"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__autoelder"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__autoelder"].BorderSizePixel = 0
	Converted["__autoelder"].Position = UDim2.new(0.101910196, 0, 0.0590168685, 0)
	Converted["__autoelder"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__autoelder"].ZIndex = 2
	Converted["__autoelder"].Name = "_autoelder"
	Converted["__autoelder"].Parent = Converted["__extrapage"]
	Converted["__autoelder"].MouseButton1Down:Connect(function()
		visibledinoselector = not visibledinoselector

		if visibledinoselector then
			Converted["_DinoSelector"].Visible = true
		else
			Converted["_DinoSelector"].Visible = false
		end
	end)
	--__main button


	Converted["_UIPadding13"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding13"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding13"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding13"].Parent = Converted["__autoelder"]

	Converted["_UICorner16"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner16"].Parent = Converted["__autoelder"]

	Converted["_DinoSelector"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_DinoSelector"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_DinoSelector"].BorderSizePixel = 0
	Converted["_DinoSelector"].Position = UDim2.new(-2.7565217, 0, -1.31140494, 0)
	Converted["_DinoSelector"].Size = UDim2.new(0, 229, 0, 529)
	Converted["_DinoSelector"].Name = "DinoSelector"
	Converted["_DinoSelector"].Parent = Converted["__autoelder"]
	Converted["_DinoSelector"].Visible = false

	Converted["__drexfarm"].Font = Enum.Font.SourceSansBold
	Converted["__drexfarm"].RichText = true
	Converted["__drexfarm"].Text = "D-Rex Farm"
	Converted["__drexfarm"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__drexfarm"].TextScaled = true
	Converted["__drexfarm"].TextSize = 1
	Converted["__drexfarm"].TextWrapped = true
	Converted["__drexfarm"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__drexfarm"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__drexfarm"].BorderSizePixel = 0
	Converted["__drexfarm"].Position = UDim2.new(0.533326864, 0, 0.221807569, 0)
	Converted["__drexfarm"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__drexfarm"].ZIndex = 2
	Converted["__drexfarm"].Name = "_drexfarm"
	Converted["__drexfarm"].Parent = Converted["__farmingpage"]
	Converted["__drexfarm"].MouseButton1Down:Connect(function()
		workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
		antiafk()
		isamberfarm = true

		local Players = game:GetService("Players")
		local player = Players.LocalPlayer

		-- Fires whenever the player's character spawns (initial spawn + respawn)
		player.CharacterAdded:Connect(function(character)
			-- If it's a respawn after death, this will run
			wait(1)
			isalive = true

			-- Get the humanoid in the new character
			local humanoid = character:WaitForChild("Humanoid")

			-- Detect when that humanoid dies
			humanoid.Died:Connect(function()
				isalive = false
			end)
		end)

		initialize() --is done once, regardless of respawn
		findclosestitems() --finds closest amber/meteors

		task.spawn(function()
			while true do
				wait(1)
				if game.Players.LocalPlayer.Character == nil then
					menureseert()
					return
				end
				local lp = game.Players.LocalPlayer.Character

				local hrp = lp:FindFirstChild("HumanoidRootPart")
				local vel = hrp.Velocity

				if hrp.Position.Y >= 560 then
					task.spawn(function()
						--do this for 5 seconds
						hrp.Velocity = Vector3.new(vel.X, -192, vel.Z)
					end)
				end
				if hrp.Position.Y <= 30 then
					task.spawn(function()
						--do this for 5 seconds
						hrp.Velocity = Vector3.new(vel.X, 384, vel.Z)
					end)
				end
			end
		end)

		task.spawn(function()
			while true do
				workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
				wait(3)
			end
		end)

		local function getclosestamber()

			if #destinations < 1 then
				findclosestitems()
				return
			end


			if (destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")) and goingtowardsamber == true then
				nearestamber = destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")

			elseif not (destinations[1]:FindFirstChild("Base") or destinations[1]:FindFirstChild("MeteorBase")) then
				findclosestitems()
				return
			end

			if not game.Players.LocalPlayer.Character then
				if nearestamber ~= nil then
					if nearestamber:IsA("BasePart") then
						nearestamber.Parent:Destroy()
					end
				end
				menureseert()
				return
			end

			if goingtowardsamber == true then
				tweentowards(nearestamber.Position)
				forcecameraup(nearestamber.Position)
				checkForClosestProximity(nearestamber)

				if compareplayerpos(nearestamber.Position) then
					goingtowardsamber = false
					spawnPlatform()
					workspace.Gravity = 196.2

					wait(0.8)
					--print("All Done!")
					findclosestitems()
					goingtowardsamber = true
				end

			end
		end
		task.spawn(function()
			--print("STARTED FARM!! AHHH!!!!")
			while true do
				if isalive == true then
					beginincubate()
					discardtrashdna()
					clearjunkextras() --if script breaks, disable these 3 ,,,
					workspace:WaitForChild("GameEvents"):WaitForChild("MovieEvent2025"):WaitForChild("ClaimIncubation"):FireServer()
				end
				wait(1)
			end
		end)
		--_ERES Tu2
		task.spawn(function()
			while true do
				if isalive == true and notbroken == true then
					getclosestamber()		
				end
				wait(0.1)
			end
		end)
	end)


	Converted["_UICorner81"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner81"].Parent = Converted["__drexfarm"]

	Converted["_UIPadding71"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding71"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding71"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding71"].Parent = Converted["__drexfarm"]


	Converted["_SearchBox"].CursorPosition = -1
	Converted["_SearchBox"].Font = Enum.Font.SourceSans
	Converted["_SearchBox"].PlaceholderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_SearchBox"].PlaceholderText = "Search Dino"
	Converted["_SearchBox"].Text = ""
	Converted["_SearchBox"].TextColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_SearchBox"].TextSize = 20
	Converted["_SearchBox"].BackgroundColor3 = Color3.fromRGB(156.00000590085983, 204.0000182390213, 255)
	Converted["_SearchBox"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_SearchBox"].BorderSizePixel = 0
	Converted["_SearchBox"].Position = UDim2.new(0.0611353703, 0, 0.141101509, 0)
	Converted["_SearchBox"].Size = UDim2.new(0, 200, 0, 39)
	Converted["_SearchBox"].Name = "SearchBox"
	Converted["_SearchBox"].Parent = Converted["_DinoSelector"]

	Converted["_ScrollingFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_ScrollingFrame"].Active = true
	Converted["_ScrollingFrame"].BackgroundColor3 = Color3.fromRGB(212.00001776218414, 212.00001776218414, 212.00001776218414)
	Converted["_ScrollingFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_ScrollingFrame"].BorderSizePixel = 0
	Converted["_ScrollingFrame"].Position = UDim2.new(0.0611353703, 0, 0.22878018, 0)
	Converted["_ScrollingFrame"].Size = UDim2.new(0, 200, 0, 333)
	Converted["_ScrollingFrame"].Parent = Converted["_DinoSelector"]

	Converted["_Dinobutton"].Font = Enum.Font.SourceSans
	Converted["_Dinobutton"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_Dinobutton"].TextScaled = false
	Converted["_Dinobutton"].TextSize = 15
	Converted["_Dinobutton"].TextWrapped = true
	Converted["_Dinobutton"].BackgroundColor3 = Color3.fromRGB(156.00000590085983, 206.0000029206276, 255)
	Converted["_Dinobutton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_Dinobutton"].BorderSizePixel = 0
	Converted["_Dinobutton"].Size = UDim2.new(0, 200, 0, 50)
	Converted["_Dinobutton"].Name = "Dinobutton"
	Converted["_Dinobutton"].Parent = Converted["_ScrollingFrame"]

	Converted["_SelectedList"].Font = Enum.Font.SourceSansItalic
	Converted["_SelectedList"].Text = "Selected:"
	Converted["_SelectedList"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_SelectedList"].TextScaled = true
	Converted["_SelectedList"].TextSize = 14
	Converted["_SelectedList"].TextWrapped = true
	Converted["_SelectedList"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["_SelectedList"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_SelectedList"].BorderSizePixel = 0
	Converted["_SelectedList"].Position = UDim2.new(0.0611353703, 0, 0.052930057, 0)
	Converted["_SelectedList"].Size = UDim2.new(0, 200, 0, 40)
	Converted["_SelectedList"].Name = "SelectedList"
	Converted["_SelectedList"].Parent = Converted["_DinoSelector"]

	Converted["_StartButton"].Font = Enum.Font.SourceSansBold
	Converted["_StartButton"].Text = "Start Elder AFK"
	Converted["_StartButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["_StartButton"].TextSize = 30
	Converted["_StartButton"].TextWrapped = true
	Converted["_StartButton"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["_StartButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["_StartButton"].BorderSizePixel = 0
	Converted["_StartButton"].Position = UDim2.new(0.0611353703, 0, 0.875236273, 0)
	Converted["_StartButton"].Size = UDim2.new(0, 200, 0, 50)
	Converted["_StartButton"].Name = "StartButton"
	Converted["_StartButton"].Parent = Converted["_DinoSelector"]

	Converted["_UIGradient5"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(74.0000031888485, 86.00000247359276, 129.00000751018524)),
		ColorSequenceKeypoint.new(0.6435986161231995, Color3.fromRGB(135.00000715255737, 181.0000044107437, 215.0000023841858)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(146.00000649690628, 196.00000351667404, 232.00000137090683))
	}
	Converted["_UIGradient5"].Rotation = -90
	Converted["_UIGradient5"].Transparency = NumberSequence.new{
		NumberSequenceKeypoint.new(0, 0.10000000149011612),
		NumberSequenceKeypoint.new(1, 0.10000000149011612)
	}
	Converted["_UIGradient5"].Parent = Converted["_DinoSelector"]

	Converted["_UICorner17"].CornerRadius = UDim.new(0.0500000007, 8)
	Converted["_UICorner17"].Parent = Converted["_DinoSelector"]

	local searchBox = Converted["_SearchBox"]
	local scroll = Converted["_ScrollingFrame"]
	local template = Converted["_Dinobutton"]
	local startButton = Converted["_StartButton"]
	local selectedLabel = Converted["_SelectedList"]

	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer

	-- Dino data
	local dinoFolder = ReplicatedStorage:WaitForChild("Database"):WaitForChild("Dinosaurs")
	local dinoNames = {}
	local dinoButtons = {}
	local selected = {}

	local unselectedColor = Color3.fromRGB(156, 206, 255)
	local selectedColor = Color3.fromRGB(87, 116, 143)

	local function updateSelectedText()
		if #selected == 0 then
			selectedLabel.Text = "Selected: (None)"
		else
			selectedLabel.Text = "Selected:\n" .. table.concat(selected, "\n")
		end
	end
	template.Visible = false

	local UIListLayout = Instance.new("UIListLayout")
	UIListLayout.Parent = scroll
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 5)

	scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
	scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	scroll.ScrollingDirection = Enum.ScrollingDirection.Y

	local finished = false
	local currentindex = 1


	local ismenu = false

	if not char then return end


	local function gotomenuandspawn()
		ismenu = true
		workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
		wait(10)

		local currentplayerdino = game:GetService("Players").LocalPlayer.MemoryCard.CurrentDino.Value

		while currentplayerdino ~= selected[currentindex] do
			currentplayerdino = game:GetService("Players").LocalPlayer.MemoryCard.CurrentDino.Value

			--until players current selected dinosaur is equal to the current index, wait and repeat
			local args2 = {
				selected[currentindex] --takes string
			}
			workspace:WaitForChild("GameFunctions"):WaitForChild("displayDino"):InvokeServer(unpack(args2))

			local args = {
				"Tyrannosaurus Rex"
			}
			workspace:WaitForChild("GameFunctions"):WaitForChild("displayDino"):InvokeServer(unpack(args))


			task.wait(.5)

			local args = {
				selected[currentindex] --takes string
			}
			workspace:WaitForChild("GameEvents"):WaitForChild("ChangeDinosaur"):FireServer(unpack(args))
			task.wait(.5)
		end

		wait(1)
		workspace:WaitForChild("GameEvents"):WaitForChild("StartPlayer"):FireServer()
		ismenu = false
	end



	local function iselder()
		local char = plr.Character 
		if not char then return end

		local elderstat = game:GetService("Players").LocalPlayer.PlayerGui.Main.Background.TopInfoBarBackground.GrowthBarFrame.GrowthBarGrowthPerLbl.Text
		if tostring(elderstat) ~= "Elder 100%" then
			return false
		else
			return true
		end
	end

	local function switchdino()
		if currentindex >= #selected then 
			finished = true
			workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
			return
		end
		currentindex += 1
		gotomenuandspawn()
	end

	for _, dino in ipairs(dinoFolder:GetChildren()) do
		table.insert(dinoNames, dino.Name)
	end
	table.sort(dinoNames)

	for _, name in ipairs(dinoNames) do
		local button = template:Clone()
		button.Name = name
		button.Text = name
		button.Visible = true
		button.Parent = scroll
		button.BackgroundColor3 = unselectedColor

		button.MouseButton1Click:Connect(function()
			local index = table.find(selected, name)
			if index then
				table.remove(selected, index)
				button.BackgroundColor3 = unselectedColor
			else
				table.insert(selected, name)
				button.BackgroundColor3 = selectedColor
			end
			updateSelectedText()
		end)

		dinoButtons[name] = button
	end

	local function updateSearch()
		local query = string.lower(searchBox.Text)

		-- Collect matching dinos with a score
		local scoredResults = {}

		for name, button in pairs(dinoButtons) do
			local lowerName = string.lower(name)
			if query == "" then
				table.insert(scoredResults, { name = name, score = 0 }) -- all shown
			else
				local startIndex = string.find(lowerName, query, 1, true)
				if startIndex then
					local score = startIndex -- earlier match = better
					if startIndex == 1 then
						score = -100 -- perfect prefix match = best
					end
					table.insert(scoredResults, { name = name, score = score })
				end
			end
		end

		-- Sort by score (lower is better)
		table.sort(scoredResults, function(a, b)
			return a.score < b.score
		end)

		-- Reorder and show/hide buttons
		local layoutOrder = 0
		for _, result in ipairs(scoredResults) do
			local button = dinoButtons[result.name]
			button.LayoutOrder = layoutOrder
			button.Visible = true
			layoutOrder += 1
		end

		-- Hide all non-matching buttons
		local resultNames = {}
		for _, r in ipairs(scoredResults) do
			resultNames[r.name] = true
		end

		for name, button in pairs(dinoButtons) do
			if not resultNames[name] then
				button.Visible = false
			end
		end
	end

	searchBox:GetPropertyChangedSignal("Text"):Connect(updateSearch)

	local function startEldering()
		task.spawn(function()
			while true do
				local eldered = iselder()
				if eldered and not ismenu then
					switchdino()
				end    
				wait(1)
			end
		end)
	end


	local function notify()
		-- Put this in a LocalScript under StarterGui, StarterPlayerScripts, or PlayerGui
		task.spawn(function()
			pcall(function()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Hello!",
					Text = "AFK Elder, Start!",
					Duration = 5, -- seconds
					Button1 = "OK" -- optional button
				})
			end)
		end)

	end
	notify()

	startButton.MouseButton1Click:Connect(function()
		if #selected == 0 then
			warn("No dinos selected")
			return
		end
		--print("Began")
		notify()
		startEldering()
	end)

	updateSelectedText()


	--end autoe elder

	Converted["_UICorner10"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner10"].Parent = Converted["__main"]

	Converted["_UIPadding6"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding6"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding6"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding6"].Parent = Converted["__main"]

	Converted["__mainpage"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__mainpage"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__mainpage"].BorderSizePixel = 0
	Converted["__mainpage"].Position = UDim2.new(-0.0998526886, 0, 1.49178064, 0)
	Converted["__mainpage"].Size = UDim2.new(0, 361, 0, 473)
	Converted["__mainpage"].Name = "_mainpage"
	Converted["__mainpage"].Parent = Converted["__main"]

	Converted["_UICorner11"].CornerRadius = UDim.new(0.0500000007, 8)
	Converted["_UICorner11"].Parent = Converted["__mainpage"]

	Converted["_UIGradient4"].Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(80.00000283122063, 91.00000217556953, 134.00000721216202)),
		ColorSequenceKeypoint.new(0.7474048733711243, Color3.fromRGB(145.00000655651093, 157.0000058412552, 199.0000033378601)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(132.0000073313713, 179.000004529953, 206.0000029206276))
	}
	Converted["_UIGradient4"].Rotation = 270
	Converted["_UIGradient4"].Parent = Converted["__mainpage"]

	Converted["__inffood"].Font = Enum.Font.SourceSansBold
	Converted["__inffood"].RichText = true
	Converted["__inffood"].Text = "Infinite Food (OFF)"
	Converted["__inffood"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__inffood"].TextScaled = true
	Converted["__inffood"].TextSize = 1
	Converted["__inffood"].TextWrapped = true
	Converted["__inffood"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__inffood"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__inffood"].BorderSizePixel = 0
	Converted["__inffood"].Position = UDim2.new(0.101910196, 0, 0.0590168685, 0)
	Converted["__inffood"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__inffood"].ZIndex = 2
	Converted["__inffood"].Name = "_inffood"
	Converted["__inffood"].Parent = Converted["__mainpage"]

	Converted["__inffood"].MouseButton1Down:Connect(function()
		InfEat = not InfEat 
		if InfEat == true then
			Converted["__inffood"].Text = "Infinite Food (ON)"	
		end
		if InfEat == false then
			Converted["__inffood"].Text = "Infinite Food (OFF)"	
		end
		task.spawn(function()
			while true do
				if InfEat then
					char = plr.Character
					if char then
						eat()
						checkForClosestBush()
					end
				end
				task.wait(1)
			end
		end)

		task.spawn(function()
			while true do
				if InfEat == true then
					storefish()
					hidefish()
				end
				wait(5)
			end
		end)

	end)

	antiafk()


	Converted["_UICorner12"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner12"].Parent = Converted["__inffood"]

	Converted["_UIPadding7"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding7"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding7"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding7"].Parent = Converted["__inffood"]

	Converted["__infwater"].Font = Enum.Font.SourceSansBold
	Converted["__infwater"].RichText = true
	Converted["__infwater"].Text = "Infinite Water (OFF)"
	Converted["__infwater"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__infwater"].TextScaled = true
	Converted["__infwater"].TextSize = 1
	Converted["__infwater"].TextWrapped = true
	Converted["__infwater"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__infwater"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__infwater"].BorderSizePixel = 0
	Converted["__infwater"].Position = UDim2.new(0.101910196, 0, 0.220069289, 0)
	Converted["__infwater"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__infwater"].ZIndex = 2
	Converted["__infwater"].Name = "_infwater"
	Converted["__infwater"].Parent = Converted["__mainpage"]
	Converted["__infwater"].MouseButton1Down:Connect(function()
		infDrink = not infDrink

		if infDrink == true then
			Converted["__infwater"].Text = "Infinite Water (ON)"
		end
		if infDrink == false then
			Converted["__infwater"].Text = "Infinite Water (OFF)"
		end

		if infDrink and not isDrinking then
			isDrinking = true
			spawn(function()
				while infDrink do
					waterDrink()
					wait(.5)
				end
				isDrinking = false
			end)
		end
	end)

	Converted["_UICorner13"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner13"].Parent = Converted["__infwater"]

	Converted["_UIPadding8"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding8"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding8"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding8"].Parent = Converted["__infwater"]

	Converted["__aquaticmode"].Font = Enum.Font.SourceSansBold
	Converted["__aquaticmode"].RichText = true
	Converted["__aquaticmode"].Text = "Aquatic Mode (OFF)"
	Converted["__aquaticmode"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__aquaticmode"].TextScaled = true
	Converted["__aquaticmode"].TextSize = 1
	Converted["__aquaticmode"].TextWrapped = true
	Converted["__aquaticmode"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__aquaticmode"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__aquaticmode"].BorderSizePixel = 0
	Converted["__aquaticmode"].Position = UDim2.new(0.533326864, 0, 0.0590168685, 0)
	Converted["__aquaticmode"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__aquaticmode"].ZIndex = 2
	Converted["__aquaticmode"].Name = "_aquaticmode"
	Converted["__aquaticmode"].Parent = Converted["__mainpage"]
	Converted["__aquaticmode"].MouseButton1Down:Connect(function()		
		turnAquatic()
		if isenabled == false then
			Converted["__aquaticmode"].Text = "Aquatic Mode (OFF)"
		else
			Converted["__aquaticmode"].Text = "Aquatic Mode (ON)"	
		end
	end)

	Converted["_UICorner14"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner14"].Parent = Converted["__aquaticmode"]

	Converted["_UIPadding9"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding9"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding9"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding9"].Parent = Converted["__aquaticmode"]

	Converted["__admindetector"].Font = Enum.Font.SourceSansBold
	Converted["__admindetector"].RichText = true
	Converted["__admindetector"].Text = "Admin Detector (OFF)"
	Converted["__admindetector"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Converted["__admindetector"].TextScaled = true
	Converted["__admindetector"].TextSize = 1
	Converted["__admindetector"].TextWrapped = true
	Converted["__admindetector"].BackgroundColor3 = Color3.fromRGB(147.00000643730164, 191.00000381469727, 241.00001603364944)
	Converted["__admindetector"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Converted["__admindetector"].BorderSizePixel = 0
	Converted["__admindetector"].Position = UDim2.new(0.533326864, 0, 0.219693393, 0)
	Converted["__admindetector"].Size = UDim2.new(0, 130, 0, 53)
	Converted["__admindetector"].ZIndex = 2
	Converted["__admindetector"].Name = "_admindetector"
	Converted["__admindetector"].Parent = Converted["__mainpage"]
	Converted["__admindetector"].MouseButton1Down:Connect(function()
		local Players = game:GetService("Players")
		local GroupID = 2564897
		local Admins = 249
		Converted["__admindetector"].Text = "Admin Detector (ON)"
		local function adminJoin()
			--print("poopy")
			workspace:WaitForChild("GameEvents"):WaitForChild("GoToMenu"):FireServer()
		end

		for _, user in pairs(Players:GetPlayers()) do
			local rank = user:GetRankInGroup(GroupID)
			if rank >= Admins then
				--print("An admin has joined")
				adminJoin()
			else
				--print(user.name,"is NOT an admin")
			end
		end

		Players.PlayerAdded:Connect(function(user)
			local rank = user:GetRankInGroup(GroupID)
			if rank >= Admins then
				--print("An admin has joined")
				adminJoin()
			else
				--print(user.name,"is NOT an admin")
			end
		end)	
	end)

	Converted["_UICorner15"].CornerRadius = UDim.new(0, 21)
	Converted["_UICorner15"].Parent = Converted["__admindetector"]

	Converted["_UIPadding10"].PaddingBottom = UDim.new(0, 1)
	Converted["_UIPadding10"].PaddingLeft = UDim.new(0.0500000007, 1)
	Converted["_UIPadding10"].PaddingRight = UDim.new(0.0500000007, 1)
	Converted["_UIPadding10"].Parent = Converted["__admindetector"]

	enabletab(Converted["__mainpage"],Converted["__farmingpage"],Converted["__extrapage"]) --enable,disable,disable
